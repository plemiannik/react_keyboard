{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","changerOfPressedKeyValueInStateObject","event","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,2BAFhB,EAmBEC,sCAAwC,SAACC,GACvC,EAAKC,SAAS,CAAEH,WAAW,4BAAD,OAA8BE,EAAME,IAApC,QApB9B,uDAKE,WACEC,SAASC,iBACP,QACAC,KAAKN,yCARX,kCAYE,WACEI,SAASG,oBACP,QACAD,KAAKN,yCAfX,oBAuBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA6BF,KAAKR,MAAMC,mBA1BhD,GAAyBU,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.430b37d4.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    pressedKey: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener(\n      'keyup',\n      this.changerOfPressedKeyValueInStateObject,\n    );\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\n      'keyup',\n      this.changerOfPressedKeyValueInStateObject,\n    );\n  }\n\n  changerOfPressedKeyValueInStateObject = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: `The last pressed key is [${event.key}]` });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{this.state.pressedKey}</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}